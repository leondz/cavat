CAVaT toolkit: Corpus Analysis and Validation for TimeML

REQUIREMENTS:

Global:
	Python 2.6.4 - 2.6.x
	MySQL Server 4.1+

Python add-ons:
	NLTK 2.0b2+
	PyParsing 1.5.2+
	MySQLdb (python-mysqldb) 1.2.2+

INSTALLATION:
Unpack cavat into its own directory. Edit cavat.py to include correct login
details for your MySQL instance. The user that CAVaT logs in to MySQL as should
have rights to create new databases and edit existing ones with a prefix 
specified by dbPrefix. The default configuration assumes that CAVaT has all 
privileges on databases beginning "timebank_", and starts with database 
"timebank" ready for use.

RUNNING CAVAT:
Change into CAVaT's main directory, and run "python cavat.py". When the system
has loaded, you should see a "cavat>" prompt. You can quit with Ctrl-C, "quit"
or "exit".

From here, if you have no corpora loaded, you may want to import one. Enter the
following to load a TimeML corpus into the "timebank_test" database (db prefixes
are hidden by the interactive interface):

cavat> corpus import /home/user/corpus/data/ to test

Depending on your disk and CPU speeds, this might take about 10-20 seconds per
megabyte of TimeML. If it seems to take longer, you can get more information 
about what CAVaT is doing during import by enabling debug mode before import:

cavat> debug on

Leave debug mode with a simple:

cavat> debug off

Once the corpus has loaded, you can use "corpus info" to see metadata about the 
import, or "corpus list" to see an available list of corpora. To switch between
corpora, and to select a newly loaded one, enter "corpus use <name>".

QUERIES:

The show command is used for generating reports on the currently loaded corpus.
Reports focus on one tag type, and give information about their attributes. One
can view all values for a tag with "list" reports, or the distribution of values
with "distribution" reports, or simply see how many instances of that tag list
a value for a field with "state" reports.

Reports can be provided in multiple formats; there is:
 screen - for screen or fixed-width font output
 csv - comma separated values
 tex - LaTeX table format

The general format for report generation is:

show <report type> of <tag> <field> [as <format>]

To try a simple query, enter:

cavat> show distribution of tlink reltype

You should see a table listing the values listed for relType in the current
corpus' TLINK tags, as well as their frequencies. To see how many TLINKs use a 
signal, and use the result in a LaTeX document, you can try:

cavat> show state of tlink signalid as tex



FURTHER HELP:

Try the Google Code pages for CAVaT:  http://code.google.com/p/cavat/

Or email the author:  leon@dcs.shef.ac.uk
